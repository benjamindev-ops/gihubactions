name: BuildMachine

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  NET-BuildMachine:
    name: .NET BuildMachine
    runs-on: [ ubuntu-latest ]

    steps:
      - name: Install dependencies
        env:
          slnPath: "${{secrets.WORKSPACE}}\\RelayHealth.EncryptionDecryption.sln"
          projectFile: "${{secrets.WORKSPACE}}\\RelayHealth.EncryptionDecryption\\RelayHealth.EncryptionDecryption.csproj"
          nupkgFile: "${{secrets.WORKSPACE}}\\RelayHealth.EncryptionDecryption.*.*.*.*.nupkg"
          nupkgSymbolsFile: "${{secrets.WORKSPACE}}\\RelayHealth.EncryptionDecryption.*.*.*.*.symbols.nupkg"
      - run: echo "$slnPath"


  Setup-Workspace:
    name: Setup Workspace
    needs: NET-BuildMachine
    runs-on: [ ubuntu-latest ]

    steps:
      - run: echo "Setup-Workspace"
      - run: ls


  Checkout-Code:
    name: Checkout Code
    needs: Setup-Workspace
    runs-on: [ ubuntu-latest ]

    steps:
      - run: echo "Checkout-Code"


  Prepare-For-Build:
    name: Prepare For Build
    needs: Checkout-Code
    runs-on: [ windows-latest ]

    steps:
      - run: echo "Prepare-For-Build"
             echo "Restore NuGet Packages"
      - uses: actions/checkout@master
      - uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NuGetAPIKey }}
          nuget-version: '5.x'
      - run: nuget restore $slnPath


      
  Build:
    name: Build DLL
    needs: Prepare-For-Build
    runs-on: [ ubuntu-latest ]

    steps:
      - run: echo "Build DLL"
      - run: utils.buildVSSolution($slnPath, "Release", "Any CPU", "one")

  build2:
    name: Build DLL 2
    needs: Prepare-For-Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.100
    
    # dotnet build
    - name: Build with dotnet
      run: dotnet build --configuration Release
  
  Push-NuGet-Package:
    name: Push-NuGet-Package
    needs: Build
    runs-on: [ ubuntu-latest ]

    steps:
      - run: echo "Push-NuGet-Package"
